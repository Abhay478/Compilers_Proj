Terminals unused in grammar

    LOGICAL_AND
    LOGICAL_OR
    LOGICAL_NOT
    EQ
    NEQ
    GT
    LT
    GTEQ
    LTEQ
    KW_TRUE
    KW_FALSE


Grammar

    0 $accept: statements $end

    1 statements: statement statements
    2           | epsilon

    3 statement: declaration ';'
    4          | assignment ';'
    5          | call_stmt ';'
    6          | return_stmt ';'

    7 var: IDENT
    8    | IDENT '.' IDENT

    9 field_data_type: ε
   10                | KW_BIG_RATIONAL
   11                | KW_COMPLEX

   12 group_data_type: KW_CYCLIC '<' LIT_INT '>'
   13                | KW_SYMMETRIC '<' LIT_INT '>'
   14                | KW_ALTERNATING '<' LIT_INT '>'
   15                | KW_DIHEDRAL '<' LIT_INT '>'
   16                | KW_INV_MAT '<' LIT_INT ',' IDENT '>'

   17 ring_data_type: KW_BIGINT
   18               | KW_MATRIX '<' LIT_INT ',' IDENT '>'
   19               | KW_POLYNOMIAL '<' IDENT '>'

   20 space_data_type: KW_VEC '<' IDENT '>'
   21                | KW_VEC '<' PRIMITIVE_DTYPE '>'

   22 declaration: KW_LET var ':' PRIMITIVE_DTYPE A
   23            | KW_LET var ':' KW_BUF '<' PRIMITIVE_DTYPE '>' A
   24            | KW_LET var ':' IDENT A
   25            | KW_LET var ':' group_data_type A
   26            | KW_LET var ':' ring_data_type A
   27            | KW_LET var ':' field_data_type A
   28            | KW_LET var ':' space_data_type A

   29 A: '=' expression
   30  | epsilon

   31 assignment: var '=' expression

   32 expression: arithmetic_expr
   33           | call_stmt
   34           | array_access
   35           | array_decl

   36 arithmetic_expr: arithmetic_expr '+' term
   37                | arithmetic_expr '-' term
   38                | term

   39 term: term '*' factor
   40     | term '/' factor
   41     | term '%' factor
   42     | factor

   43 factor: var
   44       | '(' arithmetic_expr ')'
   45       | '-' factor
   46       | constant

   47 constant: LIT_CHAR
   48         | LIT_FLOAT
   49         | LIT_INT
   50         | LIT_STR

   51 return_stmt: KW_RETURN expression

   52 call_stmt: var '(' pass_param_list ')'
   53          | var '(' ')'

   54 pass_param_list: expression ',' pass_param_list
   55                | expression

   56 array_access: var C

   57 C: '[' LIT_INT ']' C
   58  | '[' LIT_INT ']'

   59 array_decl: '[' array_list ']'

   60 array_list: constant ',' array_list
   61           | constant

   62 epsilon: ε


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 41
    '(' (40) 44 52 53
    ')' (41) 44 52 53
    '*' (42) 39
    '+' (43) 36
    ',' (44) 16 18 54 60
    '-' (45) 37 45
    '.' (46) 8
    '/' (47) 40
    ':' (58) 22 23 24 25 26 27 28
    ';' (59) 3 4 5 6
    '<' (60) 12 13 14 15 16 18 19 20 21 23
    '=' (61) 29 31
    '>' (62) 12 13 14 15 16 18 19 20 21 23
    '[' (91) 57 58 59
    ']' (93) 57 58 59
    error (256)
    KW_LET (258) 22 23 24 25 26 27 28
    KW_RETURN (259) 51
    KW_CYCLIC (260) 12
    KW_BIG_RATIONAL (261) 10
    KW_COMPLEX (262) 11
    KW_SYMMETRIC (263) 13
    KW_ALTERNATING (264) 14
    KW_DIHEDRAL (265) 15
    KW_INV_MAT (266) 16
    KW_BIGINT (267) 17
    KW_MATRIX (268) 18
    KW_POLYNOMIAL (269) 19
    KW_VEC (270) 20 21
    KW_BUF (271) 23
    IDENT (272) 7 8 16 18 19 20 24
    PRIMITIVE_DTYPE (273) 21 22 23
    LIT_INT (274) 12 13 14 15 16 18 49 57 58
    LIT_FLOAT (275) 48
    LIT_STR (276) 50
    LIT_CHAR (277) 47
    LOGICAL_AND (278)
    LOGICAL_OR (279)
    LOGICAL_NOT (280)
    EQ (281)
    NEQ (282)
    GT (283)
    LT (284)
    GTEQ (285)
    LTEQ (286)
    KW_TRUE (287)
    KW_FALSE (288)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    statements (51)
        on left: 1 2
        on right: 0 1
    statement (52)
        on left: 3 4 5 6
        on right: 1
    var (53)
        on left: 7 8
        on right: 22 23 24 25 26 27 28 31 43 52 53 56
    field_data_type (54)
        on left: 9 10 11
        on right: 27
    group_data_type (55)
        on left: 12 13 14 15 16
        on right: 25
    ring_data_type (56)
        on left: 17 18 19
        on right: 26
    space_data_type (57)
        on left: 20 21
        on right: 28
    declaration (58)
        on left: 22 23 24 25 26 27 28
        on right: 3
    A (59)
        on left: 29 30
        on right: 22 23 24 25 26 27 28
    assignment (60)
        on left: 31
        on right: 4
    expression (61)
        on left: 32 33 34 35
        on right: 29 31 51 54 55
    arithmetic_expr (62)
        on left: 36 37 38
        on right: 32 36 37 44
    term (63)
        on left: 39 40 41 42
        on right: 36 37 38 39 40 41
    factor (64)
        on left: 43 44 45 46
        on right: 39 40 41 42 45
    constant (65)
        on left: 47 48 49 50
        on right: 46 60 61
    return_stmt (66)
        on left: 51
        on right: 6
    call_stmt (67)
        on left: 52 53
        on right: 5 33
    pass_param_list (68)
        on left: 54 55
        on right: 52 54
    array_access (69)
        on left: 56
        on right: 34
    C (70)
        on left: 57 58
        on right: 56 57
    array_decl (71)
        on left: 59
        on right: 35
    array_list (72)
        on left: 60 61
        on right: 59 60
    epsilon (73)
        on left: 62
        on right: 2 30


State 0

    0 $accept: • statements $end

    KW_LET     shift, and go to state 1
    KW_RETURN  shift, and go to state 2
    IDENT      shift, and go to state 3

    $default  reduce using rule 62 (epsilon)

    statements   go to state 4
    statement    go to state 5
    var          go to state 6
    declaration  go to state 7
    assignment   go to state 8
    return_stmt  go to state 9
    call_stmt    go to state 10
    epsilon      go to state 11


State 1

   22 declaration: KW_LET • var ':' PRIMITIVE_DTYPE A
   23            | KW_LET • var ':' KW_BUF '<' PRIMITIVE_DTYPE '>' A
   24            | KW_LET • var ':' IDENT A
   25            | KW_LET • var ':' group_data_type A
   26            | KW_LET • var ':' ring_data_type A
   27            | KW_LET • var ':' field_data_type A
   28            | KW_LET • var ':' space_data_type A

    IDENT  shift, and go to state 3

    var  go to state 12


State 2

   51 return_stmt: KW_RETURN • expression

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18
    '['        shift, and go to state 19

    var              go to state 20
    expression       go to state 21
    arithmetic_expr  go to state 22
    term             go to state 23
    factor           go to state 24
    constant         go to state 25
    call_stmt        go to state 26
    array_access     go to state 27
    array_decl       go to state 28


State 3

    7 var: IDENT •
    8    | IDENT • '.' IDENT

    '.'  shift, and go to state 29

    $default  reduce using rule 7 (var)


State 4

    0 $accept: statements • $end

    $end  shift, and go to state 30


State 5

    1 statements: statement • statements

    KW_LET     shift, and go to state 1
    KW_RETURN  shift, and go to state 2
    IDENT      shift, and go to state 3

    $default  reduce using rule 62 (epsilon)

    statements   go to state 31
    statement    go to state 5
    var          go to state 6
    declaration  go to state 7
    assignment   go to state 8
    return_stmt  go to state 9
    call_stmt    go to state 10
    epsilon      go to state 11


State 6

   31 assignment: var • '=' expression
   52 call_stmt: var • '(' pass_param_list ')'
   53          | var • '(' ')'

    '='  shift, and go to state 32
    '('  shift, and go to state 33


State 7

    3 statement: declaration • ';'

    ';'  shift, and go to state 34


State 8

    4 statement: assignment • ';'

    ';'  shift, and go to state 35


State 9

    6 statement: return_stmt • ';'

    ';'  shift, and go to state 36


State 10

    5 statement: call_stmt • ';'

    ';'  shift, and go to state 37


State 11

    2 statements: epsilon •

    $default  reduce using rule 2 (statements)


State 12

   22 declaration: KW_LET var • ':' PRIMITIVE_DTYPE A
   23            | KW_LET var • ':' KW_BUF '<' PRIMITIVE_DTYPE '>' A
   24            | KW_LET var • ':' IDENT A
   25            | KW_LET var • ':' group_data_type A
   26            | KW_LET var • ':' ring_data_type A
   27            | KW_LET var • ':' field_data_type A
   28            | KW_LET var • ':' space_data_type A

    ':'  shift, and go to state 38


State 13

   49 constant: LIT_INT •

    $default  reduce using rule 49 (constant)


State 14

   48 constant: LIT_FLOAT •

    $default  reduce using rule 48 (constant)


State 15

   50 constant: LIT_STR •

    $default  reduce using rule 50 (constant)


State 16

   47 constant: LIT_CHAR •

    $default  reduce using rule 47 (constant)


State 17

   45 factor: '-' • factor

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18

    var       go to state 39
    factor    go to state 40
    constant  go to state 25


State 18

   44 factor: '(' • arithmetic_expr ')'

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18

    var              go to state 39
    arithmetic_expr  go to state 41
    term             go to state 23
    factor           go to state 24
    constant         go to state 25


State 19

   59 array_decl: '[' • array_list ']'

    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16

    constant    go to state 42
    array_list  go to state 43


State 20

   43 factor: var •
   52 call_stmt: var • '(' pass_param_list ')'
   53          | var • '(' ')'
   56 array_access: var • C

    '('  shift, and go to state 33
    '['  shift, and go to state 44

    $default  reduce using rule 43 (factor)

    C  go to state 45


State 21

   51 return_stmt: KW_RETURN expression •

    $default  reduce using rule 51 (return_stmt)


State 22

   32 expression: arithmetic_expr •
   36 arithmetic_expr: arithmetic_expr • '+' term
   37                | arithmetic_expr • '-' term

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47

    $default  reduce using rule 32 (expression)


State 23

   38 arithmetic_expr: term •
   39 term: term • '*' factor
   40     | term • '/' factor
   41     | term • '%' factor

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 38 (arithmetic_expr)


State 24

   42 term: factor •

    $default  reduce using rule 42 (term)


State 25

   46 factor: constant •

    $default  reduce using rule 46 (factor)


State 26

   33 expression: call_stmt •

    $default  reduce using rule 33 (expression)


State 27

   34 expression: array_access •

    $default  reduce using rule 34 (expression)


State 28

   35 expression: array_decl •

    $default  reduce using rule 35 (expression)


State 29

    8 var: IDENT '.' • IDENT

    IDENT  shift, and go to state 51


State 30

    0 $accept: statements $end •

    $default  accept


State 31

    1 statements: statement statements •

    $default  reduce using rule 1 (statements)


State 32

   31 assignment: var '=' • expression

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18
    '['        shift, and go to state 19

    var              go to state 20
    expression       go to state 52
    arithmetic_expr  go to state 22
    term             go to state 23
    factor           go to state 24
    constant         go to state 25
    call_stmt        go to state 26
    array_access     go to state 27
    array_decl       go to state 28


State 33

   52 call_stmt: var '(' • pass_param_list ')'
   53          | var '(' • ')'

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18
    ')'        shift, and go to state 53
    '['        shift, and go to state 19

    var              go to state 20
    expression       go to state 54
    arithmetic_expr  go to state 22
    term             go to state 23
    factor           go to state 24
    constant         go to state 25
    call_stmt        go to state 26
    pass_param_list  go to state 55
    array_access     go to state 27
    array_decl       go to state 28


State 34

    3 statement: declaration ';' •

    $default  reduce using rule 3 (statement)


State 35

    4 statement: assignment ';' •

    $default  reduce using rule 4 (statement)


State 36

    6 statement: return_stmt ';' •

    $default  reduce using rule 6 (statement)


State 37

    5 statement: call_stmt ';' •

    $default  reduce using rule 5 (statement)


State 38

   22 declaration: KW_LET var ':' • PRIMITIVE_DTYPE A
   23            | KW_LET var ':' • KW_BUF '<' PRIMITIVE_DTYPE '>' A
   24            | KW_LET var ':' • IDENT A
   25            | KW_LET var ':' • group_data_type A
   26            | KW_LET var ':' • ring_data_type A
   27            | KW_LET var ':' • field_data_type A
   28            | KW_LET var ':' • space_data_type A

    KW_CYCLIC        shift, and go to state 56
    KW_BIG_RATIONAL  shift, and go to state 57
    KW_COMPLEX       shift, and go to state 58
    KW_SYMMETRIC     shift, and go to state 59
    KW_ALTERNATING   shift, and go to state 60
    KW_DIHEDRAL      shift, and go to state 61
    KW_INV_MAT       shift, and go to state 62
    KW_BIGINT        shift, and go to state 63
    KW_MATRIX        shift, and go to state 64
    KW_POLYNOMIAL    shift, and go to state 65
    KW_VEC           shift, and go to state 66
    KW_BUF           shift, and go to state 67
    IDENT            shift, and go to state 68
    PRIMITIVE_DTYPE  shift, and go to state 69

    $default  reduce using rule 9 (field_data_type)

    field_data_type  go to state 70
    group_data_type  go to state 71
    ring_data_type   go to state 72
    space_data_type  go to state 73


State 39

   43 factor: var •

    $default  reduce using rule 43 (factor)


State 40

   45 factor: '-' factor •

    $default  reduce using rule 45 (factor)


State 41

   36 arithmetic_expr: arithmetic_expr • '+' term
   37                | arithmetic_expr • '-' term
   44 factor: '(' arithmetic_expr • ')'

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    ')'  shift, and go to state 74


State 42

   60 array_list: constant • ',' array_list
   61           | constant •

    ','  shift, and go to state 75

    $default  reduce using rule 61 (array_list)


State 43

   59 array_decl: '[' array_list • ']'

    ']'  shift, and go to state 76


State 44

   57 C: '[' • LIT_INT ']' C
   58  | '[' • LIT_INT ']'

    LIT_INT  shift, and go to state 77


State 45

   56 array_access: var C •

    $default  reduce using rule 56 (array_access)


State 46

   36 arithmetic_expr: arithmetic_expr '+' • term

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18

    var       go to state 39
    term      go to state 78
    factor    go to state 24
    constant  go to state 25


State 47

   37 arithmetic_expr: arithmetic_expr '-' • term

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18

    var       go to state 39
    term      go to state 79
    factor    go to state 24
    constant  go to state 25


State 48

   39 term: term '*' • factor

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18

    var       go to state 39
    factor    go to state 80
    constant  go to state 25


State 49

   40 term: term '/' • factor

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18

    var       go to state 39
    factor    go to state 81
    constant  go to state 25


State 50

   41 term: term '%' • factor

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18

    var       go to state 39
    factor    go to state 82
    constant  go to state 25


State 51

    8 var: IDENT '.' IDENT •

    $default  reduce using rule 8 (var)


State 52

   31 assignment: var '=' expression •

    $default  reduce using rule 31 (assignment)


State 53

   53 call_stmt: var '(' ')' •

    $default  reduce using rule 53 (call_stmt)


State 54

   54 pass_param_list: expression • ',' pass_param_list
   55                | expression •

    ','  shift, and go to state 83

    $default  reduce using rule 55 (pass_param_list)


State 55

   52 call_stmt: var '(' pass_param_list • ')'

    ')'  shift, and go to state 84


State 56

   12 group_data_type: KW_CYCLIC • '<' LIT_INT '>'

    '<'  shift, and go to state 85


State 57

   10 field_data_type: KW_BIG_RATIONAL •

    $default  reduce using rule 10 (field_data_type)


State 58

   11 field_data_type: KW_COMPLEX •

    $default  reduce using rule 11 (field_data_type)


State 59

   13 group_data_type: KW_SYMMETRIC • '<' LIT_INT '>'

    '<'  shift, and go to state 86


State 60

   14 group_data_type: KW_ALTERNATING • '<' LIT_INT '>'

    '<'  shift, and go to state 87


State 61

   15 group_data_type: KW_DIHEDRAL • '<' LIT_INT '>'

    '<'  shift, and go to state 88


State 62

   16 group_data_type: KW_INV_MAT • '<' LIT_INT ',' IDENT '>'

    '<'  shift, and go to state 89


State 63

   17 ring_data_type: KW_BIGINT •

    $default  reduce using rule 17 (ring_data_type)


State 64

   18 ring_data_type: KW_MATRIX • '<' LIT_INT ',' IDENT '>'

    '<'  shift, and go to state 90


State 65

   19 ring_data_type: KW_POLYNOMIAL • '<' IDENT '>'

    '<'  shift, and go to state 91


State 66

   20 space_data_type: KW_VEC • '<' IDENT '>'
   21                | KW_VEC • '<' PRIMITIVE_DTYPE '>'

    '<'  shift, and go to state 92


State 67

   23 declaration: KW_LET var ':' KW_BUF • '<' PRIMITIVE_DTYPE '>' A

    '<'  shift, and go to state 93


State 68

   24 declaration: KW_LET var ':' IDENT • A

    '='  shift, and go to state 94

    $default  reduce using rule 62 (epsilon)

    A        go to state 95
    epsilon  go to state 96


State 69

   22 declaration: KW_LET var ':' PRIMITIVE_DTYPE • A

    '='  shift, and go to state 94

    $default  reduce using rule 62 (epsilon)

    A        go to state 97
    epsilon  go to state 96


State 70

   27 declaration: KW_LET var ':' field_data_type • A

    '='  shift, and go to state 94

    $default  reduce using rule 62 (epsilon)

    A        go to state 98
    epsilon  go to state 96


State 71

   25 declaration: KW_LET var ':' group_data_type • A

    '='  shift, and go to state 94

    $default  reduce using rule 62 (epsilon)

    A        go to state 99
    epsilon  go to state 96


State 72

   26 declaration: KW_LET var ':' ring_data_type • A

    '='  shift, and go to state 94

    $default  reduce using rule 62 (epsilon)

    A        go to state 100
    epsilon  go to state 96


State 73

   28 declaration: KW_LET var ':' space_data_type • A

    '='  shift, and go to state 94

    $default  reduce using rule 62 (epsilon)

    A        go to state 101
    epsilon  go to state 96


State 74

   44 factor: '(' arithmetic_expr ')' •

    $default  reduce using rule 44 (factor)


State 75

   60 array_list: constant ',' • array_list

    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16

    constant    go to state 42
    array_list  go to state 102


State 76

   59 array_decl: '[' array_list ']' •

    $default  reduce using rule 59 (array_decl)


State 77

   57 C: '[' LIT_INT • ']' C
   58  | '[' LIT_INT • ']'

    ']'  shift, and go to state 103


State 78

   36 arithmetic_expr: arithmetic_expr '+' term •
   39 term: term • '*' factor
   40     | term • '/' factor
   41     | term • '%' factor

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 36 (arithmetic_expr)


State 79

   37 arithmetic_expr: arithmetic_expr '-' term •
   39 term: term • '*' factor
   40     | term • '/' factor
   41     | term • '%' factor

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 37 (arithmetic_expr)


State 80

   39 term: term '*' factor •

    $default  reduce using rule 39 (term)


State 81

   40 term: term '/' factor •

    $default  reduce using rule 40 (term)


State 82

   41 term: term '%' factor •

    $default  reduce using rule 41 (term)


State 83

   54 pass_param_list: expression ',' • pass_param_list

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18
    '['        shift, and go to state 19

    var              go to state 20
    expression       go to state 54
    arithmetic_expr  go to state 22
    term             go to state 23
    factor           go to state 24
    constant         go to state 25
    call_stmt        go to state 26
    pass_param_list  go to state 104
    array_access     go to state 27
    array_decl       go to state 28


State 84

   52 call_stmt: var '(' pass_param_list ')' •

    $default  reduce using rule 52 (call_stmt)


State 85

   12 group_data_type: KW_CYCLIC '<' • LIT_INT '>'

    LIT_INT  shift, and go to state 105


State 86

   13 group_data_type: KW_SYMMETRIC '<' • LIT_INT '>'

    LIT_INT  shift, and go to state 106


State 87

   14 group_data_type: KW_ALTERNATING '<' • LIT_INT '>'

    LIT_INT  shift, and go to state 107


State 88

   15 group_data_type: KW_DIHEDRAL '<' • LIT_INT '>'

    LIT_INT  shift, and go to state 108


State 89

   16 group_data_type: KW_INV_MAT '<' • LIT_INT ',' IDENT '>'

    LIT_INT  shift, and go to state 109


State 90

   18 ring_data_type: KW_MATRIX '<' • LIT_INT ',' IDENT '>'

    LIT_INT  shift, and go to state 110


State 91

   19 ring_data_type: KW_POLYNOMIAL '<' • IDENT '>'

    IDENT  shift, and go to state 111


State 92

   20 space_data_type: KW_VEC '<' • IDENT '>'
   21                | KW_VEC '<' • PRIMITIVE_DTYPE '>'

    IDENT            shift, and go to state 112
    PRIMITIVE_DTYPE  shift, and go to state 113


State 93

   23 declaration: KW_LET var ':' KW_BUF '<' • PRIMITIVE_DTYPE '>' A

    PRIMITIVE_DTYPE  shift, and go to state 114


State 94

   29 A: '=' • expression

    IDENT      shift, and go to state 3
    LIT_INT    shift, and go to state 13
    LIT_FLOAT  shift, and go to state 14
    LIT_STR    shift, and go to state 15
    LIT_CHAR   shift, and go to state 16
    '-'        shift, and go to state 17
    '('        shift, and go to state 18
    '['        shift, and go to state 19

    var              go to state 20
    expression       go to state 115
    arithmetic_expr  go to state 22
    term             go to state 23
    factor           go to state 24
    constant         go to state 25
    call_stmt        go to state 26
    array_access     go to state 27
    array_decl       go to state 28


State 95

   24 declaration: KW_LET var ':' IDENT A •

    $default  reduce using rule 24 (declaration)


State 96

   30 A: epsilon •

    $default  reduce using rule 30 (A)


State 97

   22 declaration: KW_LET var ':' PRIMITIVE_DTYPE A •

    $default  reduce using rule 22 (declaration)


State 98

   27 declaration: KW_LET var ':' field_data_type A •

    $default  reduce using rule 27 (declaration)


State 99

   25 declaration: KW_LET var ':' group_data_type A •

    $default  reduce using rule 25 (declaration)


State 100

   26 declaration: KW_LET var ':' ring_data_type A •

    $default  reduce using rule 26 (declaration)


State 101

   28 declaration: KW_LET var ':' space_data_type A •

    $default  reduce using rule 28 (declaration)


State 102

   60 array_list: constant ',' array_list •

    $default  reduce using rule 60 (array_list)


State 103

   57 C: '[' LIT_INT ']' • C
   58  | '[' LIT_INT ']' •

    '['  shift, and go to state 44

    $default  reduce using rule 58 (C)

    C  go to state 116


State 104

   54 pass_param_list: expression ',' pass_param_list •

    $default  reduce using rule 54 (pass_param_list)


State 105

   12 group_data_type: KW_CYCLIC '<' LIT_INT • '>'

    '>'  shift, and go to state 117


State 106

   13 group_data_type: KW_SYMMETRIC '<' LIT_INT • '>'

    '>'  shift, and go to state 118


State 107

   14 group_data_type: KW_ALTERNATING '<' LIT_INT • '>'

    '>'  shift, and go to state 119


State 108

   15 group_data_type: KW_DIHEDRAL '<' LIT_INT • '>'

    '>'  shift, and go to state 120


State 109

   16 group_data_type: KW_INV_MAT '<' LIT_INT • ',' IDENT '>'

    ','  shift, and go to state 121


State 110

   18 ring_data_type: KW_MATRIX '<' LIT_INT • ',' IDENT '>'

    ','  shift, and go to state 122


State 111

   19 ring_data_type: KW_POLYNOMIAL '<' IDENT • '>'

    '>'  shift, and go to state 123


State 112

   20 space_data_type: KW_VEC '<' IDENT • '>'

    '>'  shift, and go to state 124


State 113

   21 space_data_type: KW_VEC '<' PRIMITIVE_DTYPE • '>'

    '>'  shift, and go to state 125


State 114

   23 declaration: KW_LET var ':' KW_BUF '<' PRIMITIVE_DTYPE • '>' A

    '>'  shift, and go to state 126


State 115

   29 A: '=' expression •

    $default  reduce using rule 29 (A)


State 116

   57 C: '[' LIT_INT ']' C •

    $default  reduce using rule 57 (C)


State 117

   12 group_data_type: KW_CYCLIC '<' LIT_INT '>' •

    $default  reduce using rule 12 (group_data_type)


State 118

   13 group_data_type: KW_SYMMETRIC '<' LIT_INT '>' •

    $default  reduce using rule 13 (group_data_type)


State 119

   14 group_data_type: KW_ALTERNATING '<' LIT_INT '>' •

    $default  reduce using rule 14 (group_data_type)


State 120

   15 group_data_type: KW_DIHEDRAL '<' LIT_INT '>' •

    $default  reduce using rule 15 (group_data_type)


State 121

   16 group_data_type: KW_INV_MAT '<' LIT_INT ',' • IDENT '>'

    IDENT  shift, and go to state 127


State 122

   18 ring_data_type: KW_MATRIX '<' LIT_INT ',' • IDENT '>'

    IDENT  shift, and go to state 128


State 123

   19 ring_data_type: KW_POLYNOMIAL '<' IDENT '>' •

    $default  reduce using rule 19 (ring_data_type)


State 124

   20 space_data_type: KW_VEC '<' IDENT '>' •

    $default  reduce using rule 20 (space_data_type)


State 125

   21 space_data_type: KW_VEC '<' PRIMITIVE_DTYPE '>' •

    $default  reduce using rule 21 (space_data_type)


State 126

   23 declaration: KW_LET var ':' KW_BUF '<' PRIMITIVE_DTYPE '>' • A

    '='  shift, and go to state 94

    $default  reduce using rule 62 (epsilon)

    A        go to state 129
    epsilon  go to state 96


State 127

   16 group_data_type: KW_INV_MAT '<' LIT_INT ',' IDENT • '>'

    '>'  shift, and go to state 130


State 128

   18 ring_data_type: KW_MATRIX '<' LIT_INT ',' IDENT • '>'

    '>'  shift, and go to state 131


State 129

   23 declaration: KW_LET var ':' KW_BUF '<' PRIMITIVE_DTYPE '>' A •

    $default  reduce using rule 23 (declaration)


State 130

   16 group_data_type: KW_INV_MAT '<' LIT_INT ',' IDENT '>' •

    $default  reduce using rule 16 (group_data_type)


State 131

   18 ring_data_type: KW_MATRIX '<' LIT_INT ',' IDENT '>' •

    $default  reduce using rule 18 (ring_data_type)
