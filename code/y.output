Terminals which are not used

   KW_MORPH
   GROUP
   RING
   FIELD
   SPACE


State 23 conflicts: 2 reduce/reduce
State 224 conflicts: 1 shift/reduce


Grammar

    0 $accept: P $end

    1 P: statements
    2  | P function
    3  | P struct
    4  | P forge
    5  | P enum

    6 statements: statement statements
    7           | epsilon

    8 statement: declaration ';'
    9          | assignment ';'
   10          | call_stmt
   11          | return_stmt ';'
   12          | conditional
   13          | switch_case
   14          | loop_stmt
   15          | KW_PRINT '(' pass_param_list ')' ';'
   16          | KW_BREAK ';'
   17          | KW_CONTINUE ';'
   18          | archetype_claim

   19 body: '{' statements '}'

   20 var: IDENT
   21    | var '.' IDENT
   22    | IDENT VARIANT IDENT

   23 field_data_type: KW_BIG_RATIONAL
   24                | KW_COMPLEX

   25 group_data_type: KW_CYCLIC '<' LIT_INT '>'
   26                | KW_SYMMETRIC '<' LIT_INT '>'
   27                | KW_ALTERNATING '<' LIT_INT '>'
   28                | KW_DIHEDRAL '<' LIT_INT '>'
   29                | KW_INV_MAT '<' LIT_INT ',' type '>'

   30 ring_data_type: KW_BIGINT
   31               | KW_MATRIX '<' LIT_INT ',' type '>'
   32               | KW_POLYNOMIAL '<' type '>'

   33 space_data_type: KW_VEC '<' type '>'

   34 declaration: KW_LET decl_tail

   35 decl_tail: typ_var decl_cntd

   36 type: PRIMITIVE_DTYPE
   37     | KW_BUF '<' PRIMITIVE_DTYPE '>'
   38     | IDENT
   39     | group_data_type
   40     | ring_data_type
   41     | field_data_type
   42     | space_data_type
   43     | '&' type
   44     | cart

   45 decl_cntd: '=' RHS
   46          | ',' decl_tail
   47          | epsilon

   48 RHS: expression
   49    | '&' RHS
   50    | '*' RHS

   51 assignment: var '=' expression
   52           | array_access '=' expression

   53 constant: LIT_CHAR
   54         | LIT_FLOAT
   55         | LIT_INT
   56         | LIT_STR

   57 expression: expression '+' expression
   58           | expression '-' expression
   59           | expression '*' expression
   60           | expression '/' expression
   61           | expression '%' expression
   62           | '(' expression ')'
   63           | expression log_op expression
   64           | '!' expression
   65           | expression rel_op expression
   66           | expression '>' expression
   67           | expression '<' expression
   68           | var
   69           | constant
   70           | unary_operation
   71           | array_access
   72           | call
   73           | KW_TRUE
   74           | KW_FALSE
   75           | expression '@' expression
   76           | array_decl

   77 return_stmt: KW_RETURN expression

   78 call_stmt: type '(' pass_param_list ')' ';'
   79          | type '(' ')' ';'

   80 call: type '(' pass_param_list ')'
   81     | type '(' ')'

   82 pass_param_list: expression ',' pass_param_list
   83                | expression

   84 unary_operation: var INCR
   85                | var DECR

   86 array_access: var array_decl

   87 array_decl: '[' array_list ']'
   88           | '[' expression SLICE expression ']'

   89 array_list: constant ',' array_list
   90           | constant

   91 conditional: KW_IF '(' expression ')' if_body

   92 if_body: body
   93        | body KW_ELSE conditional
   94        | body KW_ELSE body

   95 loop_stmt: KW_WHILE '(' expression ')' body
   96          | KW_FOR '(' assignment ';' expression ';' loop_mut ')' body
   97          | KW_FOR '(' declaration ';' expression ';' loop_mut ')' body
   98          | KW_FOR IDENT KW_IN IDENT body

   99 loop_mut: unary_operation
  100         | epsilon

  101 switch_case: KW_SWITCH '(' expression ')' '{' sc_blocks KW_DEFAULT ':' statements '}'
  102            | KW_SWITCH '(' expression ')' '{' sc_blocks '}'

  103 sc_blocks: KW_CASE LIT_CHAR ':' statements sc_blocks
  104          | KW_CASE LIT_INT ':' statements sc_blocks
  105          | KW_CASE LIT_FLOAT ':' statements sc_blocks
  106          | epsilon

  107 archetype_claim: KW_CLAIM IDENT KW_IS KW_GROUP '{' additive_rule identity_rule negation_rule '}' ';'
  108                | KW_CLAIM IDENT KW_IS KW_RING '{' mult_rule identity_rule '}' ';'
  109                | KW_CLAIM IDENT KW_IS KW_FIELD '{' inverse_rule '}' ';'
  110                | KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

  111 additive_rule: '(' IDENT '=' IDENT '+' IDENT ')' ARROW body

  112 mult_rule: '(' IDENT '=' IDENT '*' IDENT ')' ARROW body

  113 identity_rule: '(' IDENT '=' LIT_INT ')' ARROW body

  114 negation_rule: '(' IDENT '=' '-' IDENT ')' ARROW body

  115 inverse_rule: '(' IDENT '=' '~' IDENT ')' ARROW body

  116 function: function_header '{' function_body '}'

  117 function_header: KW_FN IDENT '(' parameter_list ')' ':' type

  118 function_body: statements

  119 parameter_list: typ_var
  120               | parameter_list ',' typ_var

  121 typ_var: var ':' type

  122 struct: KW_STRUCT IDENT '{' attr_list '}'

  123 attr_list: IDENT
  124          | typ_var ',' IDENT

  125 enum: KW_ENUM IDENT '{' variant_list '}'

  126 variant_list: IDENT
  127             | variant_list ',' IDENT

  128 forge: KW_FORGE type '(' parameter_list ')' '{' statements '}'

  129 cart: '(' typ_list ')'

  130 typ_list: typ_list ',' type
  131         | type

  132 epsilon: /* empty */


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 61
'&' (38) 43 49
'(' (40) 15 62 78 79 80 81 91 95 96 97 101 102 110 111 112 113 114
    115 117 128 129
')' (41) 15 62 78 79 80 81 91 95 96 97 101 102 110 111 112 113 114
    115 117 128 129
'*' (42) 50 59 112
'+' (43) 57 111
',' (44) 29 31 46 82 89 120 124 127 130
'-' (45) 58 114
'.' (46) 21
'/' (47) 60
':' (58) 101 103 104 105 117 121
';' (59) 8 9 11 15 16 17 78 79 96 97 107 108 109 110
'<' (60) 25 26 27 28 29 31 32 33 37 67
'=' (61) 45 51 52 110 111 112 113 114 115
'>' (62) 25 26 27 28 29 31 32 33 37 66
'@' (64) 75
'[' (91) 87 88
']' (93) 87 88
'{' (123) 19 101 102 107 108 109 110 116 122 125 128
'}' (125) 19 101 102 107 108 109 110 116 122 125 128
'~' (126) 115
error (256)
KW_CLAIM (258) 107 108 109 110
KW_IS (259) 107 108 109 110
KW_GROUP (260) 107
KW_RING (261) 108
KW_FIELD (262) 109 110
KW_SPACE (263) 110
KW_PRINT (264) 15
KW_LET (265) 34
KW_RETURN (266) 77
KW_IF (267) 91
KW_ELSE (268) 93 94
KW_WHILE (269) 95
KW_FOR (270) 96 97 98
KW_IN (271) 98
KW_SWITCH (272) 101 102
KW_CASE (273) 103 104 105
KW_DEFAULT (274) 101
KW_BREAK (275) 16
KW_CONTINUE (276) 17
KW_FN (277) 117
KW_MORPH (278)
KW_FORGE (279) 128
KW_STRUCT (280) 122
KW_ENUM (281) 125
KW_CYCLIC (282) 25
KW_BIG_RATIONAL (283) 23
KW_COMPLEX (284) 24
KW_SYMMETRIC (285) 26
KW_ALTERNATING (286) 27
KW_DIHEDRAL (287) 28
KW_INV_MAT (288) 29
KW_BIGINT (289) 30
KW_MATRIX (290) 31
KW_POLYNOMIAL (291) 32
KW_VEC (292) 33
KW_BUF (293) 37
IDENT (294) 20 21 22 38 98 107 108 109 110 111 112 113 114 115 117
    122 123 124 125 126 127
PRIMITIVE_DTYPE (295) 36 37
LIT_INT (296) 25 26 27 28 29 31 55 104 113
LIT_FLOAT (297) 54 105
LIT_STR (298) 56
LIT_CHAR (299) 53 103
log_op (300) 63
rel_op (301) 65
KW_TRUE (302) 73
KW_FALSE (303) 74
GROUP (304)
RING (305)
FIELD (306)
SPACE (307)
INCR (308) 84
DECR (309) 85
ARROW (310) 111 112 113 114 115
VARIANT (311) 22
SLICE (312) 88


Nonterminals, with rules where they appear

$accept (80)
    on left: 0
P (81)
    on left: 1 2 3 4 5, on right: 0 2 3 4 5
statements (82)
    on left: 6 7, on right: 1 6 19 101 103 104 105 118 128
statement (83)
    on left: 8 9 10 11 12 13 14 15 16 17 18, on right: 6
body (84)
    on left: 19, on right: 92 93 94 95 96 97 98 111 112 113 114 115
var (85)
    on left: 20 21 22, on right: 21 51 68 84 85 86 121
field_data_type (86)
    on left: 23 24, on right: 41
group_data_type (87)
    on left: 25 26 27 28 29, on right: 39
ring_data_type (88)
    on left: 30 31 32, on right: 40
space_data_type (89)
    on left: 33, on right: 42
declaration (90)
    on left: 34, on right: 8 97
decl_tail (91)
    on left: 35, on right: 34 46
type (92)
    on left: 36 37 38 39 40 41 42 43 44, on right: 29 31 32 33 43 78
    79 80 81 117 121 128 130 131
decl_cntd (93)
    on left: 45 46 47, on right: 35
RHS (94)
    on left: 48 49 50, on right: 45 49 50
assignment (95)
    on left: 51 52, on right: 9 96
constant (96)
    on left: 53 54 55 56, on right: 69 89 90
expression (97)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75 76, on right: 48 51 52 57 58 59 60 61 62 63 64 65 66 67 75 77
    82 83 88 91 95 96 97 101 102
return_stmt (98)
    on left: 77, on right: 11
call_stmt (99)
    on left: 78 79, on right: 10
call (100)
    on left: 80 81, on right: 72
pass_param_list (101)
    on left: 82 83, on right: 15 78 80 82
unary_operation (102)
    on left: 84 85, on right: 70 99
array_access (103)
    on left: 86, on right: 52 71
array_decl (104)
    on left: 87 88, on right: 76 86
array_list (105)
    on left: 89 90, on right: 87 89
conditional (106)
    on left: 91, on right: 12 93
if_body (107)
    on left: 92 93 94, on right: 91
loop_stmt (108)
    on left: 95 96 97 98, on right: 14
loop_mut (109)
    on left: 99 100, on right: 96 97
switch_case (110)
    on left: 101 102, on right: 13
sc_blocks (111)
    on left: 103 104 105 106, on right: 101 102 103 104 105
archetype_claim (112)
    on left: 107 108 109 110, on right: 18
additive_rule (113)
    on left: 111, on right: 107 110
mult_rule (114)
    on left: 112, on right: 108 110
identity_rule (115)
    on left: 113, on right: 107 108 110
negation_rule (116)
    on left: 114, on right: 107 110
inverse_rule (117)
    on left: 115, on right: 109
function (118)
    on left: 116, on right: 2
function_header (119)
    on left: 117, on right: 116
function_body (120)
    on left: 118, on right: 116
parameter_list (121)
    on left: 119 120, on right: 117 120 128
typ_var (122)
    on left: 121, on right: 35 119 120 124
struct (123)
    on left: 122, on right: 3
attr_list (124)
    on left: 123 124, on right: 122
enum (125)
    on left: 125, on right: 5
variant_list (126)
    on left: 126 127, on right: 125 127
forge (127)
    on left: 128, on right: 4
cart (128)
    on left: 129, on right: 44
typ_list (129)
    on left: 130 131, on right: 129 130
epsilon (130)
    on left: 132, on right: 7 47 100 106


state 0

    0 $accept: . P $end

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    P                go to state 27
    statements       go to state 28
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    cart             go to state 45
    epsilon          go to state 46


state 1

  107 archetype_claim: KW_CLAIM . IDENT KW_IS KW_GROUP '{' additive_rule identity_rule negation_rule '}' ';'
  108                | KW_CLAIM . IDENT KW_IS KW_RING '{' mult_rule identity_rule '}' ';'
  109                | KW_CLAIM . IDENT KW_IS KW_FIELD '{' inverse_rule '}' ';'
  110                | KW_CLAIM . IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    IDENT  shift, and go to state 47


state 2

   15 statement: KW_PRINT . '(' pass_param_list ')' ';'

    '('  shift, and go to state 48


state 3

   34 declaration: KW_LET . decl_tail

    IDENT  shift, and go to state 49

    var        go to state 50
    decl_tail  go to state 51
    typ_var    go to state 52


state 4

   77 return_stmt: KW_RETURN . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 65
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 5

   91 conditional: KW_IF . '(' expression ')' if_body

    '('  shift, and go to state 70


state 6

   95 loop_stmt: KW_WHILE . '(' expression ')' body

    '('  shift, and go to state 71


state 7

   96 loop_stmt: KW_FOR . '(' assignment ';' expression ';' loop_mut ')' body
   97          | KW_FOR . '(' declaration ';' expression ';' loop_mut ')' body
   98          | KW_FOR . IDENT KW_IN IDENT body

    IDENT  shift, and go to state 72
    '('    shift, and go to state 73


state 8

  101 switch_case: KW_SWITCH . '(' expression ')' '{' sc_blocks KW_DEFAULT ':' statements '}'
  102            | KW_SWITCH . '(' expression ')' '{' sc_blocks '}'

    '('  shift, and go to state 74


state 9

   16 statement: KW_BREAK . ';'

    ';'  shift, and go to state 75


state 10

   17 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 76


state 11

   25 group_data_type: KW_CYCLIC . '<' LIT_INT '>'

    '<'  shift, and go to state 77


state 12

   23 field_data_type: KW_BIG_RATIONAL .

    $default  reduce using rule 23 (field_data_type)


state 13

   24 field_data_type: KW_COMPLEX .

    $default  reduce using rule 24 (field_data_type)


state 14

   26 group_data_type: KW_SYMMETRIC . '<' LIT_INT '>'

    '<'  shift, and go to state 78


state 15

   27 group_data_type: KW_ALTERNATING . '<' LIT_INT '>'

    '<'  shift, and go to state 79


state 16

   28 group_data_type: KW_DIHEDRAL . '<' LIT_INT '>'

    '<'  shift, and go to state 80


state 17

   29 group_data_type: KW_INV_MAT . '<' LIT_INT ',' type '>'

    '<'  shift, and go to state 81


state 18

   30 ring_data_type: KW_BIGINT .

    $default  reduce using rule 30 (ring_data_type)


state 19

   31 ring_data_type: KW_MATRIX . '<' LIT_INT ',' type '>'

    '<'  shift, and go to state 82


state 20

   32 ring_data_type: KW_POLYNOMIAL . '<' type '>'

    '<'  shift, and go to state 83


state 21

   33 space_data_type: KW_VEC . '<' type '>'

    '<'  shift, and go to state 84


state 22

   37 type: KW_BUF . '<' PRIMITIVE_DTYPE '>'

    '<'  shift, and go to state 85


state 23

   20 var: IDENT .
   22    | IDENT . VARIANT IDENT
   38 type: IDENT .

    VARIANT  shift, and go to state 86

    '('       reduce using rule 38 (type)
    ')'       reduce using rule 20 (var)
    ')'       [reduce using rule 38 (type)]
    ','       reduce using rule 20 (var)
    ','       [reduce using rule 38 (type)]
    $default  reduce using rule 20 (var)


state 24

   36 type: PRIMITIVE_DTYPE .

    $default  reduce using rule 36 (type)


state 25

  129 cart: '(' . typ_list ')'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 88
    cart             go to state 45
    typ_list         go to state 89


state 26

   43 type: '&' . type

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 90
    cart             go to state 45


state 27

    0 $accept: P . $end
    2 P: P . function
    3  | P . struct
    4  | P . forge
    5  | P . enum

    $end       shift, and go to state 91
    KW_FN      shift, and go to state 92
    KW_FORGE   shift, and go to state 93
    KW_STRUCT  shift, and go to state 94
    KW_ENUM    shift, and go to state 95

    function         go to state 96
    function_header  go to state 97
    struct           go to state 98
    enum             go to state 99
    forge            go to state 100


state 28

    1 P: statements .

    $default  reduce using rule 1 (P)


state 29

    6 statements: statement . statements

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    statements       go to state 101
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    cart             go to state 45
    epsilon          go to state 46


state 30

   21 var: var . '.' IDENT
   51 assignment: var . '=' expression
   86 array_access: var . array_decl

    '.'  shift, and go to state 102
    '='  shift, and go to state 103
    '['  shift, and go to state 61

    array_decl  go to state 104


state 31

   41 type: field_data_type .

    $default  reduce using rule 41 (type)


state 32

   39 type: group_data_type .

    $default  reduce using rule 39 (type)


state 33

   40 type: ring_data_type .

    $default  reduce using rule 40 (type)


state 34

   42 type: space_data_type .

    $default  reduce using rule 42 (type)


state 35

    8 statement: declaration . ';'

    ';'  shift, and go to state 105


state 36

   78 call_stmt: type . '(' pass_param_list ')' ';'
   79          | type . '(' ')' ';'

    '('  shift, and go to state 106


state 37

    9 statement: assignment . ';'

    ';'  shift, and go to state 107


state 38

   11 statement: return_stmt . ';'

    ';'  shift, and go to state 108


state 39

   10 statement: call_stmt .

    $default  reduce using rule 10 (statement)


state 40

   52 assignment: array_access . '=' expression

    '='  shift, and go to state 109


state 41

   12 statement: conditional .

    $default  reduce using rule 12 (statement)


state 42

   14 statement: loop_stmt .

    $default  reduce using rule 14 (statement)


state 43

   13 statement: switch_case .

    $default  reduce using rule 13 (statement)


state 44

   18 statement: archetype_claim .

    $default  reduce using rule 18 (statement)


state 45

   44 type: cart .

    $default  reduce using rule 44 (type)


state 46

    7 statements: epsilon .

    $default  reduce using rule 7 (statements)


state 47

  107 archetype_claim: KW_CLAIM IDENT . KW_IS KW_GROUP '{' additive_rule identity_rule negation_rule '}' ';'
  108                | KW_CLAIM IDENT . KW_IS KW_RING '{' mult_rule identity_rule '}' ';'
  109                | KW_CLAIM IDENT . KW_IS KW_FIELD '{' inverse_rule '}' ';'
  110                | KW_CLAIM IDENT . KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    KW_IS  shift, and go to state 110


state 48

   15 statement: KW_PRINT '(' . pass_param_list ')' ';'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 111
    call             go to state 66
    pass_param_list  go to state 112
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 49

   20 var: IDENT .
   22    | IDENT . VARIANT IDENT

    VARIANT  shift, and go to state 86

    $default  reduce using rule 20 (var)


state 50

   21 var: var . '.' IDENT
  121 typ_var: var . ':' type

    '.'  shift, and go to state 102
    ':'  shift, and go to state 113


state 51

   34 declaration: KW_LET decl_tail .

    $default  reduce using rule 34 (declaration)


state 52

   35 decl_tail: typ_var . decl_cntd

    ','  shift, and go to state 114
    '='  shift, and go to state 115

    $default  reduce using rule 132 (epsilon)

    decl_cntd  go to state 116
    epsilon    go to state 117


state 53

   55 constant: LIT_INT .

    $default  reduce using rule 55 (constant)


state 54

   54 constant: LIT_FLOAT .

    $default  reduce using rule 54 (constant)


state 55

   56 constant: LIT_STR .

    $default  reduce using rule 56 (constant)


state 56

   53 constant: LIT_CHAR .

    $default  reduce using rule 53 (constant)


state 57

   73 expression: KW_TRUE .

    $default  reduce using rule 73 (expression)


state 58

   74 expression: KW_FALSE .

    $default  reduce using rule 74 (expression)


state 59

   64 expression: '!' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 118
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 60

   62 expression: '(' . expression ')'
  129 cart: '(' . typ_list ')'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 119
    constant         go to state 64
    expression       go to state 120
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45
    typ_list         go to state 89


state 61

   87 array_decl: '[' . array_list ']'
   88           | '[' . expression SLICE expression ']'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 121
    expression       go to state 122
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    array_list       go to state 123
    cart             go to state 45


state 62

   21 var: var . '.' IDENT
   68 expression: var .
   84 unary_operation: var . INCR
   85                | var . DECR
   86 array_access: var . array_decl

    INCR  shift, and go to state 124
    DECR  shift, and go to state 125
    '.'   shift, and go to state 102
    '['   shift, and go to state 61

    $default  reduce using rule 68 (expression)

    array_decl  go to state 104


state 63

   80 call: type . '(' pass_param_list ')'
   81     | type . '(' ')'

    '('  shift, and go to state 126


state 64

   69 expression: constant .

    $default  reduce using rule 69 (expression)


state 65

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   77 return_stmt: KW_RETURN expression .

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136

    $default  reduce using rule 77 (return_stmt)


state 66

   72 expression: call .

    $default  reduce using rule 72 (expression)


state 67

   70 expression: unary_operation .

    $default  reduce using rule 70 (expression)


state 68

   71 expression: array_access .

    $default  reduce using rule 71 (expression)


state 69

   76 expression: array_decl .

    $default  reduce using rule 76 (expression)


state 70

   91 conditional: KW_IF '(' . expression ')' if_body

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 137
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 71

   95 loop_stmt: KW_WHILE '(' . expression ')' body

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 138
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 72

   98 loop_stmt: KW_FOR IDENT . KW_IN IDENT body

    KW_IN  shift, and go to state 139


state 73

   96 loop_stmt: KW_FOR '(' . assignment ';' expression ';' loop_mut ')' body
   97          | KW_FOR '(' . declaration ';' expression ';' loop_mut ')' body

    KW_LET  shift, and go to state 3
    IDENT   shift, and go to state 49

    var           go to state 30
    declaration   go to state 140
    assignment    go to state 141
    array_access  go to state 40


state 74

  101 switch_case: KW_SWITCH '(' . expression ')' '{' sc_blocks KW_DEFAULT ':' statements '}'
  102            | KW_SWITCH '(' . expression ')' '{' sc_blocks '}'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 142
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 75

   16 statement: KW_BREAK ';' .

    $default  reduce using rule 16 (statement)


state 76

   17 statement: KW_CONTINUE ';' .

    $default  reduce using rule 17 (statement)


state 77

   25 group_data_type: KW_CYCLIC '<' . LIT_INT '>'

    LIT_INT  shift, and go to state 143


state 78

   26 group_data_type: KW_SYMMETRIC '<' . LIT_INT '>'

    LIT_INT  shift, and go to state 144


state 79

   27 group_data_type: KW_ALTERNATING '<' . LIT_INT '>'

    LIT_INT  shift, and go to state 145


state 80

   28 group_data_type: KW_DIHEDRAL '<' . LIT_INT '>'

    LIT_INT  shift, and go to state 146


state 81

   29 group_data_type: KW_INV_MAT '<' . LIT_INT ',' type '>'

    LIT_INT  shift, and go to state 147


state 82

   31 ring_data_type: KW_MATRIX '<' . LIT_INT ',' type '>'

    LIT_INT  shift, and go to state 148


state 83

   32 ring_data_type: KW_POLYNOMIAL '<' . type '>'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 149
    cart             go to state 45


state 84

   33 space_data_type: KW_VEC '<' . type '>'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 150
    cart             go to state 45


state 85

   37 type: KW_BUF '<' . PRIMITIVE_DTYPE '>'

    PRIMITIVE_DTYPE  shift, and go to state 151


state 86

   22 var: IDENT VARIANT . IDENT

    IDENT  shift, and go to state 152


state 87

   38 type: IDENT .

    $default  reduce using rule 38 (type)


state 88

  131 typ_list: type .

    $default  reduce using rule 131 (typ_list)


state 89

  129 cart: '(' typ_list . ')'
  130 typ_list: typ_list . ',' type

    ')'  shift, and go to state 153
    ','  shift, and go to state 154


state 90

   43 type: '&' type .

    $default  reduce using rule 43 (type)


state 91

    0 $accept: P $end .

    $default  accept


state 92

  117 function_header: KW_FN . IDENT '(' parameter_list ')' ':' type

    IDENT  shift, and go to state 155


state 93

  128 forge: KW_FORGE . type '(' parameter_list ')' '{' statements '}'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 156
    cart             go to state 45


state 94

  122 struct: KW_STRUCT . IDENT '{' attr_list '}'

    IDENT  shift, and go to state 157


state 95

  125 enum: KW_ENUM . IDENT '{' variant_list '}'

    IDENT  shift, and go to state 158


state 96

    2 P: P function .

    $default  reduce using rule 2 (P)


state 97

  116 function: function_header . '{' function_body '}'

    '{'  shift, and go to state 159


state 98

    3 P: P struct .

    $default  reduce using rule 3 (P)


state 99

    5 P: P enum .

    $default  reduce using rule 5 (P)


state 100

    4 P: P forge .

    $default  reduce using rule 4 (P)


state 101

    6 statements: statement statements .

    $default  reduce using rule 6 (statements)


state 102

   21 var: var '.' . IDENT

    IDENT  shift, and go to state 160


state 103

   51 assignment: var '=' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 161
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 104

   86 array_access: var array_decl .

    $default  reduce using rule 86 (array_access)


state 105

    8 statement: declaration ';' .

    $default  reduce using rule 8 (statement)


state 106

   78 call_stmt: type '(' . pass_param_list ')' ';'
   79          | type '(' . ')' ';'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    ')'              shift, and go to state 162
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 111
    call             go to state 66
    pass_param_list  go to state 163
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 107

    9 statement: assignment ';' .

    $default  reduce using rule 9 (statement)


state 108

   11 statement: return_stmt ';' .

    $default  reduce using rule 11 (statement)


state 109

   52 assignment: array_access '=' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 164
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 110

  107 archetype_claim: KW_CLAIM IDENT KW_IS . KW_GROUP '{' additive_rule identity_rule negation_rule '}' ';'
  108                | KW_CLAIM IDENT KW_IS . KW_RING '{' mult_rule identity_rule '}' ';'
  109                | KW_CLAIM IDENT KW_IS . KW_FIELD '{' inverse_rule '}' ';'
  110                | KW_CLAIM IDENT KW_IS . KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    KW_GROUP  shift, and go to state 165
    KW_RING   shift, and go to state 166
    KW_FIELD  shift, and go to state 167
    KW_SPACE  shift, and go to state 168


state 111

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   82 pass_param_list: expression . ',' pass_param_list
   83                | expression .

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136
    ','     shift, and go to state 169

    $default  reduce using rule 83 (pass_param_list)


state 112

   15 statement: KW_PRINT '(' pass_param_list . ')' ';'

    ')'  shift, and go to state 170


state 113

  121 typ_var: var ':' . type

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 171
    cart             go to state 45


state 114

   46 decl_cntd: ',' . decl_tail

    IDENT  shift, and go to state 49

    var        go to state 50
    decl_tail  go to state 172
    typ_var    go to state 52


state 115

   45 decl_cntd: '=' . RHS

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '*'              shift, and go to state 173
    '('              shift, and go to state 60
    '&'              shift, and go to state 174
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    RHS              go to state 175
    constant         go to state 64
    expression       go to state 176
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 116

   35 decl_tail: typ_var decl_cntd .

    $default  reduce using rule 35 (decl_tail)


state 117

   47 decl_cntd: epsilon .

    $default  reduce using rule 47 (decl_cntd)


state 118

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   64           | '!' expression .
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132
    '*'  shift, and go to state 133
    '/'  shift, and go to state 134
    '%'  shift, and go to state 135
    '@'  shift, and go to state 136

    $default  reduce using rule 64 (expression)


state 119

   80 call: type . '(' pass_param_list ')'
   81     | type . '(' ')'
  131 typ_list: type .

    '('  shift, and go to state 126

    $default  reduce using rule 131 (typ_list)


state 120

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   62           | '(' expression . ')'
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136
    ')'     shift, and go to state 177


state 121

   69 expression: constant .
   89 array_list: constant . ',' array_list
   90           | constant .

    ','  shift, and go to state 178

    ']'       reduce using rule 90 (array_list)
    $default  reduce using rule 69 (expression)


state 122

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   88 array_decl: '[' expression . SLICE expression ']'

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    SLICE   shift, and go to state 179
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136


state 123

   87 array_decl: '[' array_list . ']'

    ']'  shift, and go to state 180


state 124

   84 unary_operation: var INCR .

    $default  reduce using rule 84 (unary_operation)


state 125

   85 unary_operation: var DECR .

    $default  reduce using rule 85 (unary_operation)


state 126

   80 call: type '(' . pass_param_list ')'
   81     | type '(' . ')'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    ')'              shift, and go to state 181
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 111
    call             go to state 66
    pass_param_list  go to state 182
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 127

   63 expression: expression log_op . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 183
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 128

   65 expression: expression rel_op . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 184
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 129

   66 expression: expression '>' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 185
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 130

   67 expression: expression '<' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 186
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 131

   57 expression: expression '+' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 187
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 132

   58 expression: expression '-' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 188
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 133

   59 expression: expression '*' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 189
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 134

   60 expression: expression '/' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 190
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 135

   61 expression: expression '%' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 191
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 136

   75 expression: expression '@' . expression

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 192
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 137

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   91 conditional: KW_IF '(' expression . ')' if_body

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136
    ')'     shift, and go to state 193


state 138

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   95 loop_stmt: KW_WHILE '(' expression . ')' body

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136
    ')'     shift, and go to state 194


state 139

   98 loop_stmt: KW_FOR IDENT KW_IN . IDENT body

    IDENT  shift, and go to state 195


state 140

   97 loop_stmt: KW_FOR '(' declaration . ';' expression ';' loop_mut ')' body

    ';'  shift, and go to state 196


state 141

   96 loop_stmt: KW_FOR '(' assignment . ';' expression ';' loop_mut ')' body

    ';'  shift, and go to state 197


state 142

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
  101 switch_case: KW_SWITCH '(' expression . ')' '{' sc_blocks KW_DEFAULT ':' statements '}'
  102            | KW_SWITCH '(' expression . ')' '{' sc_blocks '}'

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136
    ')'     shift, and go to state 198


state 143

   25 group_data_type: KW_CYCLIC '<' LIT_INT . '>'

    '>'  shift, and go to state 199


state 144

   26 group_data_type: KW_SYMMETRIC '<' LIT_INT . '>'

    '>'  shift, and go to state 200


state 145

   27 group_data_type: KW_ALTERNATING '<' LIT_INT . '>'

    '>'  shift, and go to state 201


state 146

   28 group_data_type: KW_DIHEDRAL '<' LIT_INT . '>'

    '>'  shift, and go to state 202


state 147

   29 group_data_type: KW_INV_MAT '<' LIT_INT . ',' type '>'

    ','  shift, and go to state 203


state 148

   31 ring_data_type: KW_MATRIX '<' LIT_INT . ',' type '>'

    ','  shift, and go to state 204


state 149

   32 ring_data_type: KW_POLYNOMIAL '<' type . '>'

    '>'  shift, and go to state 205


state 150

   33 space_data_type: KW_VEC '<' type . '>'

    '>'  shift, and go to state 206


state 151

   37 type: KW_BUF '<' PRIMITIVE_DTYPE . '>'

    '>'  shift, and go to state 207


state 152

   22 var: IDENT VARIANT IDENT .

    $default  reduce using rule 22 (var)


state 153

  129 cart: '(' typ_list ')' .

    $default  reduce using rule 129 (cart)


state 154

  130 typ_list: typ_list ',' . type

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 208
    cart             go to state 45


state 155

  117 function_header: KW_FN IDENT . '(' parameter_list ')' ':' type

    '('  shift, and go to state 209


state 156

  128 forge: KW_FORGE type . '(' parameter_list ')' '{' statements '}'

    '('  shift, and go to state 210


state 157

  122 struct: KW_STRUCT IDENT . '{' attr_list '}'

    '{'  shift, and go to state 211


state 158

  125 enum: KW_ENUM IDENT . '{' variant_list '}'

    '{'  shift, and go to state 212


state 159

  116 function: function_header '{' . function_body '}'

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    statements       go to state 213
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    function_body    go to state 214
    cart             go to state 45
    epsilon          go to state 46


state 160

   21 var: var '.' IDENT .

    $default  reduce using rule 21 (var)


state 161

   51 assignment: var '=' expression .
   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136

    $default  reduce using rule 51 (assignment)


state 162

   79 call_stmt: type '(' ')' . ';'

    ';'  shift, and go to state 215


state 163

   78 call_stmt: type '(' pass_param_list . ')' ';'

    ')'  shift, and go to state 216


state 164

   52 assignment: array_access '=' expression .
   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136

    $default  reduce using rule 52 (assignment)


state 165

  107 archetype_claim: KW_CLAIM IDENT KW_IS KW_GROUP . '{' additive_rule identity_rule negation_rule '}' ';'

    '{'  shift, and go to state 217


state 166

  108 archetype_claim: KW_CLAIM IDENT KW_IS KW_RING . '{' mult_rule identity_rule '}' ';'

    '{'  shift, and go to state 218


state 167

  109 archetype_claim: KW_CLAIM IDENT KW_IS KW_FIELD . '{' inverse_rule '}' ';'

    '{'  shift, and go to state 219


state 168

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE . '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    '{'  shift, and go to state 220


state 169

   82 pass_param_list: expression ',' . pass_param_list

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 111
    call             go to state 66
    pass_param_list  go to state 221
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 170

   15 statement: KW_PRINT '(' pass_param_list ')' . ';'

    ';'  shift, and go to state 222


state 171

  121 typ_var: var ':' type .

    $default  reduce using rule 121 (typ_var)


state 172

   46 decl_cntd: ',' decl_tail .

    $default  reduce using rule 46 (decl_cntd)


state 173

   50 RHS: '*' . RHS

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '*'              shift, and go to state 173
    '('              shift, and go to state 60
    '&'              shift, and go to state 174
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    RHS              go to state 223
    constant         go to state 64
    expression       go to state 176
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 174

   43 type: '&' . type
   49 RHS: '&' . RHS

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '*'              shift, and go to state 173
    '('              shift, and go to state 60
    '&'              shift, and go to state 174
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 224
    RHS              go to state 225
    constant         go to state 64
    expression       go to state 176
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 175

   45 decl_cntd: '=' RHS .

    $default  reduce using rule 45 (decl_cntd)


state 176

   48 RHS: expression .
   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136

    $default  reduce using rule 48 (RHS)


state 177

   62 expression: '(' expression ')' .

    $default  reduce using rule 62 (expression)


state 178

   89 array_list: constant ',' . array_list

    LIT_INT    shift, and go to state 53
    LIT_FLOAT  shift, and go to state 54
    LIT_STR    shift, and go to state 55
    LIT_CHAR   shift, and go to state 56

    constant    go to state 226
    array_list  go to state 227


state 179

   88 array_decl: '[' expression SLICE . expression ']'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 228
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 180

   87 array_decl: '[' array_list ']' .

    $default  reduce using rule 87 (array_decl)


state 181

   81 call: type '(' ')' .

    $default  reduce using rule 81 (call)


state 182

   80 call: type '(' pass_param_list . ')'

    ')'  shift, and go to state 229


state 183

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   63           | expression log_op expression .
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136

    $default  reduce using rule 63 (expression)


state 184

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   65           | expression rel_op expression .
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132
    '*'  shift, and go to state 133
    '/'  shift, and go to state 134
    '%'  shift, and go to state 135
    '@'  shift, and go to state 136

    $default  reduce using rule 65 (expression)


state 185

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   66           | expression '>' expression .
   67           | expression . '<' expression
   75           | expression . '@' expression

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132
    '*'  shift, and go to state 133
    '/'  shift, and go to state 134
    '%'  shift, and go to state 135
    '@'  shift, and go to state 136

    $default  reduce using rule 66 (expression)


state 186

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   67           | expression '<' expression .
   75           | expression . '@' expression

    '+'  shift, and go to state 131
    '-'  shift, and go to state 132
    '*'  shift, and go to state 133
    '/'  shift, and go to state 134
    '%'  shift, and go to state 135
    '@'  shift, and go to state 136

    $default  reduce using rule 67 (expression)


state 187

   57 expression: expression . '+' expression
   57           | expression '+' expression .
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    '*'  shift, and go to state 133
    '/'  shift, and go to state 134
    '%'  shift, and go to state 135
    '@'  shift, and go to state 136

    $default  reduce using rule 57 (expression)


state 188

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   58           | expression '-' expression .
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    '*'  shift, and go to state 133
    '/'  shift, and go to state 134
    '%'  shift, and go to state 135
    '@'  shift, and go to state 136

    $default  reduce using rule 58 (expression)


state 189

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   59           | expression '*' expression .
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    '@'  shift, and go to state 136

    $default  reduce using rule 59 (expression)


state 190

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   60           | expression '/' expression .
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    '@'  shift, and go to state 136

    $default  reduce using rule 60 (expression)


state 191

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   61           | expression '%' expression .
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression

    '@'  shift, and go to state 136

    $default  reduce using rule 61 (expression)


state 192

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   75           | expression '@' expression .

    $default  reduce using rule 75 (expression)


state 193

   91 conditional: KW_IF '(' expression ')' . if_body

    '{'  shift, and go to state 230

    body     go to state 231
    if_body  go to state 232


state 194

   95 loop_stmt: KW_WHILE '(' expression ')' . body

    '{'  shift, and go to state 230

    body  go to state 233


state 195

   98 loop_stmt: KW_FOR IDENT KW_IN IDENT . body

    '{'  shift, and go to state 230

    body  go to state 234


state 196

   97 loop_stmt: KW_FOR '(' declaration ';' . expression ';' loop_mut ')' body

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 235
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 197

   96 loop_stmt: KW_FOR '(' assignment ';' . expression ';' loop_mut ')' body

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    LIT_INT          shift, and go to state 53
    LIT_FLOAT        shift, and go to state 54
    LIT_STR          shift, and go to state 55
    LIT_CHAR         shift, and go to state 56
    KW_TRUE          shift, and go to state 57
    KW_FALSE         shift, and go to state 58
    '!'              shift, and go to state 59
    '('              shift, and go to state 60
    '&'              shift, and go to state 26
    '['              shift, and go to state 61

    var              go to state 62
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 63
    constant         go to state 64
    expression       go to state 236
    call             go to state 66
    unary_operation  go to state 67
    array_access     go to state 68
    array_decl       go to state 69
    cart             go to state 45


state 198

  101 switch_case: KW_SWITCH '(' expression ')' . '{' sc_blocks KW_DEFAULT ':' statements '}'
  102            | KW_SWITCH '(' expression ')' . '{' sc_blocks '}'

    '{'  shift, and go to state 237


state 199

   25 group_data_type: KW_CYCLIC '<' LIT_INT '>' .

    $default  reduce using rule 25 (group_data_type)


state 200

   26 group_data_type: KW_SYMMETRIC '<' LIT_INT '>' .

    $default  reduce using rule 26 (group_data_type)


state 201

   27 group_data_type: KW_ALTERNATING '<' LIT_INT '>' .

    $default  reduce using rule 27 (group_data_type)


state 202

   28 group_data_type: KW_DIHEDRAL '<' LIT_INT '>' .

    $default  reduce using rule 28 (group_data_type)


state 203

   29 group_data_type: KW_INV_MAT '<' LIT_INT ',' . type '>'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 238
    cart             go to state 45


state 204

   31 ring_data_type: KW_MATRIX '<' LIT_INT ',' . type '>'

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 239
    cart             go to state 45


state 205

   32 ring_data_type: KW_POLYNOMIAL '<' type '>' .

    $default  reduce using rule 32 (ring_data_type)


state 206

   33 space_data_type: KW_VEC '<' type '>' .

    $default  reduce using rule 33 (space_data_type)


state 207

   37 type: KW_BUF '<' PRIMITIVE_DTYPE '>' .

    $default  reduce using rule 37 (type)


state 208

  130 typ_list: typ_list ',' type .

    $default  reduce using rule 130 (typ_list)


state 209

  117 function_header: KW_FN IDENT '(' . parameter_list ')' ':' type

    IDENT  shift, and go to state 49

    var             go to state 50
    parameter_list  go to state 240
    typ_var         go to state 241


state 210

  128 forge: KW_FORGE type '(' . parameter_list ')' '{' statements '}'

    IDENT  shift, and go to state 49

    var             go to state 50
    parameter_list  go to state 242
    typ_var         go to state 241


state 211

  122 struct: KW_STRUCT IDENT '{' . attr_list '}'

    IDENT  shift, and go to state 243

    var        go to state 50
    typ_var    go to state 244
    attr_list  go to state 245


state 212

  125 enum: KW_ENUM IDENT '{' . variant_list '}'

    IDENT  shift, and go to state 246

    variant_list  go to state 247


state 213

  118 function_body: statements .

    $default  reduce using rule 118 (function_body)


state 214

  116 function: function_header '{' function_body . '}'

    '}'  shift, and go to state 248


state 215

   79 call_stmt: type '(' ')' ';' .

    $default  reduce using rule 79 (call_stmt)


state 216

   78 call_stmt: type '(' pass_param_list ')' . ';'

    ';'  shift, and go to state 249


state 217

  107 archetype_claim: KW_CLAIM IDENT KW_IS KW_GROUP '{' . additive_rule identity_rule negation_rule '}' ';'

    '('  shift, and go to state 250

    additive_rule  go to state 251


state 218

  108 archetype_claim: KW_CLAIM IDENT KW_IS KW_RING '{' . mult_rule identity_rule '}' ';'

    '('  shift, and go to state 252

    mult_rule  go to state 253


state 219

  109 archetype_claim: KW_CLAIM IDENT KW_IS KW_FIELD '{' . inverse_rule '}' ';'

    '('  shift, and go to state 254

    inverse_rule  go to state 255


state 220

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' . KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    KW_FIELD  shift, and go to state 256


state 221

   82 pass_param_list: expression ',' pass_param_list .

    $default  reduce using rule 82 (pass_param_list)


state 222

   15 statement: KW_PRINT '(' pass_param_list ')' ';' .

    $default  reduce using rule 15 (statement)


state 223

   50 RHS: '*' RHS .

    $default  reduce using rule 50 (RHS)


state 224

   43 type: '&' type .
   80 call: type . '(' pass_param_list ')'
   81     | type . '(' ')'

    '('  shift, and go to state 126

    '('  [reduce using rule 43 (type)]


state 225

   49 RHS: '&' RHS .

    $default  reduce using rule 49 (RHS)


state 226

   89 array_list: constant . ',' array_list
   90           | constant .

    ','  shift, and go to state 178

    $default  reduce using rule 90 (array_list)


state 227

   89 array_list: constant ',' array_list .

    $default  reduce using rule 89 (array_list)


state 228

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   88 array_decl: '[' expression SLICE expression . ']'

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136
    ']'     shift, and go to state 257


state 229

   80 call: type '(' pass_param_list ')' .

    $default  reduce using rule 80 (call)


state 230

   19 body: '{' . statements '}'

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    statements       go to state 258
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    cart             go to state 45
    epsilon          go to state 46


state 231

   92 if_body: body .
   93        | body . KW_ELSE conditional
   94        | body . KW_ELSE body

    KW_ELSE  shift, and go to state 259

    $default  reduce using rule 92 (if_body)


state 232

   91 conditional: KW_IF '(' expression ')' if_body .

    $default  reduce using rule 91 (conditional)


state 233

   95 loop_stmt: KW_WHILE '(' expression ')' body .

    $default  reduce using rule 95 (loop_stmt)


state 234

   98 loop_stmt: KW_FOR IDENT KW_IN IDENT body .

    $default  reduce using rule 98 (loop_stmt)


state 235

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   97 loop_stmt: KW_FOR '(' declaration ';' expression . ';' loop_mut ')' body

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136
    ';'     shift, and go to state 260


state 236

   57 expression: expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '*' expression
   60           | expression . '/' expression
   61           | expression . '%' expression
   63           | expression . log_op expression
   65           | expression . rel_op expression
   66           | expression . '>' expression
   67           | expression . '<' expression
   75           | expression . '@' expression
   96 loop_stmt: KW_FOR '(' assignment ';' expression . ';' loop_mut ')' body

    log_op  shift, and go to state 127
    rel_op  shift, and go to state 128
    '>'     shift, and go to state 129
    '<'     shift, and go to state 130
    '+'     shift, and go to state 131
    '-'     shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    '%'     shift, and go to state 135
    '@'     shift, and go to state 136
    ';'     shift, and go to state 261


state 237

  101 switch_case: KW_SWITCH '(' expression ')' '{' . sc_blocks KW_DEFAULT ':' statements '}'
  102            | KW_SWITCH '(' expression ')' '{' . sc_blocks '}'

    KW_CASE  shift, and go to state 262

    $default  reduce using rule 132 (epsilon)

    sc_blocks  go to state 263
    epsilon    go to state 264


state 238

   29 group_data_type: KW_INV_MAT '<' LIT_INT ',' type . '>'

    '>'  shift, and go to state 265


state 239

   31 ring_data_type: KW_MATRIX '<' LIT_INT ',' type . '>'

    '>'  shift, and go to state 266


state 240

  117 function_header: KW_FN IDENT '(' parameter_list . ')' ':' type
  120 parameter_list: parameter_list . ',' typ_var

    ')'  shift, and go to state 267
    ','  shift, and go to state 268


state 241

  119 parameter_list: typ_var .

    $default  reduce using rule 119 (parameter_list)


state 242

  120 parameter_list: parameter_list . ',' typ_var
  128 forge: KW_FORGE type '(' parameter_list . ')' '{' statements '}'

    ')'  shift, and go to state 269
    ','  shift, and go to state 268


state 243

   20 var: IDENT .
   22    | IDENT . VARIANT IDENT
  123 attr_list: IDENT .

    VARIANT  shift, and go to state 86

    '}'       reduce using rule 123 (attr_list)
    $default  reduce using rule 20 (var)


state 244

  124 attr_list: typ_var . ',' IDENT

    ','  shift, and go to state 270


state 245

  122 struct: KW_STRUCT IDENT '{' attr_list . '}'

    '}'  shift, and go to state 271


state 246

  126 variant_list: IDENT .

    $default  reduce using rule 126 (variant_list)


state 247

  125 enum: KW_ENUM IDENT '{' variant_list . '}'
  127 variant_list: variant_list . ',' IDENT

    '}'  shift, and go to state 272
    ','  shift, and go to state 273


state 248

  116 function: function_header '{' function_body '}' .

    $default  reduce using rule 116 (function)


state 249

   78 call_stmt: type '(' pass_param_list ')' ';' .

    $default  reduce using rule 78 (call_stmt)


state 250

  111 additive_rule: '(' . IDENT '=' IDENT '+' IDENT ')' ARROW body

    IDENT  shift, and go to state 274


state 251

  107 archetype_claim: KW_CLAIM IDENT KW_IS KW_GROUP '{' additive_rule . identity_rule negation_rule '}' ';'

    '('  shift, and go to state 275

    identity_rule  go to state 276


state 252

  112 mult_rule: '(' . IDENT '=' IDENT '*' IDENT ')' ARROW body

    IDENT  shift, and go to state 277


state 253

  108 archetype_claim: KW_CLAIM IDENT KW_IS KW_RING '{' mult_rule . identity_rule '}' ';'

    '('  shift, and go to state 275

    identity_rule  go to state 278


state 254

  115 inverse_rule: '(' . IDENT '=' '~' IDENT ')' ARROW body

    IDENT  shift, and go to state 279


state 255

  109 archetype_claim: KW_CLAIM IDENT KW_IS KW_FIELD '{' inverse_rule . '}' ';'

    '}'  shift, and go to state 280


state 256

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD . '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    '='  shift, and go to state 281


state 257

   88 array_decl: '[' expression SLICE expression ']' .

    $default  reduce using rule 88 (array_decl)


state 258

   19 body: '{' statements . '}'

    '}'  shift, and go to state 282


state 259

   93 if_body: body KW_ELSE . conditional
   94        | body KW_ELSE . body

    KW_IF  shift, and go to state 5
    '{'    shift, and go to state 230

    body         go to state 283
    conditional  go to state 284


state 260

   97 loop_stmt: KW_FOR '(' declaration ';' expression ';' . loop_mut ')' body

    IDENT  shift, and go to state 49

    $default  reduce using rule 132 (epsilon)

    var              go to state 285
    unary_operation  go to state 286
    loop_mut         go to state 287
    epsilon          go to state 288


state 261

   96 loop_stmt: KW_FOR '(' assignment ';' expression ';' . loop_mut ')' body

    IDENT  shift, and go to state 49

    $default  reduce using rule 132 (epsilon)

    var              go to state 285
    unary_operation  go to state 286
    loop_mut         go to state 289
    epsilon          go to state 288


state 262

  103 sc_blocks: KW_CASE . LIT_CHAR ':' statements sc_blocks
  104          | KW_CASE . LIT_INT ':' statements sc_blocks
  105          | KW_CASE . LIT_FLOAT ':' statements sc_blocks

    LIT_INT    shift, and go to state 290
    LIT_FLOAT  shift, and go to state 291
    LIT_CHAR   shift, and go to state 292


state 263

  101 switch_case: KW_SWITCH '(' expression ')' '{' sc_blocks . KW_DEFAULT ':' statements '}'
  102            | KW_SWITCH '(' expression ')' '{' sc_blocks . '}'

    KW_DEFAULT  shift, and go to state 293
    '}'         shift, and go to state 294


state 264

  106 sc_blocks: epsilon .

    $default  reduce using rule 106 (sc_blocks)


state 265

   29 group_data_type: KW_INV_MAT '<' LIT_INT ',' type '>' .

    $default  reduce using rule 29 (group_data_type)


state 266

   31 ring_data_type: KW_MATRIX '<' LIT_INT ',' type '>' .

    $default  reduce using rule 31 (ring_data_type)


state 267

  117 function_header: KW_FN IDENT '(' parameter_list ')' . ':' type

    ':'  shift, and go to state 295


state 268

  120 parameter_list: parameter_list ',' . typ_var

    IDENT  shift, and go to state 49

    var      go to state 50
    typ_var  go to state 296


state 269

  128 forge: KW_FORGE type '(' parameter_list ')' . '{' statements '}'

    '{'  shift, and go to state 297


state 270

  124 attr_list: typ_var ',' . IDENT

    IDENT  shift, and go to state 298


state 271

  122 struct: KW_STRUCT IDENT '{' attr_list '}' .

    $default  reduce using rule 122 (struct)


state 272

  125 enum: KW_ENUM IDENT '{' variant_list '}' .

    $default  reduce using rule 125 (enum)


state 273

  127 variant_list: variant_list ',' . IDENT

    IDENT  shift, and go to state 299


state 274

  111 additive_rule: '(' IDENT . '=' IDENT '+' IDENT ')' ARROW body

    '='  shift, and go to state 300


state 275

  113 identity_rule: '(' . IDENT '=' LIT_INT ')' ARROW body

    IDENT  shift, and go to state 301


state 276

  107 archetype_claim: KW_CLAIM IDENT KW_IS KW_GROUP '{' additive_rule identity_rule . negation_rule '}' ';'

    '('  shift, and go to state 302

    negation_rule  go to state 303


state 277

  112 mult_rule: '(' IDENT . '=' IDENT '*' IDENT ')' ARROW body

    '='  shift, and go to state 304


state 278

  108 archetype_claim: KW_CLAIM IDENT KW_IS KW_RING '{' mult_rule identity_rule . '}' ';'

    '}'  shift, and go to state 305


state 279

  115 inverse_rule: '(' IDENT . '=' '~' IDENT ')' ARROW body

    '='  shift, and go to state 306


state 280

  109 archetype_claim: KW_CLAIM IDENT KW_IS KW_FIELD '{' inverse_rule '}' . ';'

    ';'  shift, and go to state 307


state 281

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' . '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    '('  shift, and go to state 308


state 282

   19 body: '{' statements '}' .

    $default  reduce using rule 19 (body)


state 283

   94 if_body: body KW_ELSE body .

    $default  reduce using rule 94 (if_body)


state 284

   93 if_body: body KW_ELSE conditional .

    $default  reduce using rule 93 (if_body)


state 285

   21 var: var . '.' IDENT
   84 unary_operation: var . INCR
   85                | var . DECR

    INCR  shift, and go to state 124
    DECR  shift, and go to state 125
    '.'   shift, and go to state 102


state 286

   99 loop_mut: unary_operation .

    $default  reduce using rule 99 (loop_mut)


state 287

   97 loop_stmt: KW_FOR '(' declaration ';' expression ';' loop_mut . ')' body

    ')'  shift, and go to state 309


state 288

  100 loop_mut: epsilon .

    $default  reduce using rule 100 (loop_mut)


state 289

   96 loop_stmt: KW_FOR '(' assignment ';' expression ';' loop_mut . ')' body

    ')'  shift, and go to state 310


state 290

  104 sc_blocks: KW_CASE LIT_INT . ':' statements sc_blocks

    ':'  shift, and go to state 311


state 291

  105 sc_blocks: KW_CASE LIT_FLOAT . ':' statements sc_blocks

    ':'  shift, and go to state 312


state 292

  103 sc_blocks: KW_CASE LIT_CHAR . ':' statements sc_blocks

    ':'  shift, and go to state 313


state 293

  101 switch_case: KW_SWITCH '(' expression ')' '{' sc_blocks KW_DEFAULT . ':' statements '}'

    ':'  shift, and go to state 314


state 294

  102 switch_case: KW_SWITCH '(' expression ')' '{' sc_blocks '}' .

    $default  reduce using rule 102 (switch_case)


state 295

  117 function_header: KW_FN IDENT '(' parameter_list ')' ':' . type

    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 87
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    type             go to state 315
    cart             go to state 45


state 296

  120 parameter_list: parameter_list ',' typ_var .

    $default  reduce using rule 120 (parameter_list)


state 297

  128 forge: KW_FORGE type '(' parameter_list ')' '{' . statements '}'

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    statements       go to state 316
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    cart             go to state 45
    epsilon          go to state 46


state 298

  124 attr_list: typ_var ',' IDENT .

    $default  reduce using rule 124 (attr_list)


state 299

  127 variant_list: variant_list ',' IDENT .

    $default  reduce using rule 127 (variant_list)


state 300

  111 additive_rule: '(' IDENT '=' . IDENT '+' IDENT ')' ARROW body

    IDENT  shift, and go to state 317


state 301

  113 identity_rule: '(' IDENT . '=' LIT_INT ')' ARROW body

    '='  shift, and go to state 318


state 302

  114 negation_rule: '(' . IDENT '=' '-' IDENT ')' ARROW body

    IDENT  shift, and go to state 319


state 303

  107 archetype_claim: KW_CLAIM IDENT KW_IS KW_GROUP '{' additive_rule identity_rule negation_rule . '}' ';'

    '}'  shift, and go to state 320


state 304

  112 mult_rule: '(' IDENT '=' . IDENT '*' IDENT ')' ARROW body

    IDENT  shift, and go to state 321


state 305

  108 archetype_claim: KW_CLAIM IDENT KW_IS KW_RING '{' mult_rule identity_rule '}' . ';'

    ';'  shift, and go to state 322


state 306

  115 inverse_rule: '(' IDENT '=' . '~' IDENT ')' ARROW body

    '~'  shift, and go to state 323


state 307

  109 archetype_claim: KW_CLAIM IDENT KW_IS KW_FIELD '{' inverse_rule '}' ';' .

    $default  reduce using rule 109 (archetype_claim)


state 308

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' . IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    IDENT  shift, and go to state 324


state 309

   97 loop_stmt: KW_FOR '(' declaration ';' expression ';' loop_mut ')' . body

    '{'  shift, and go to state 230

    body  go to state 325


state 310

   96 loop_stmt: KW_FOR '(' assignment ';' expression ';' loop_mut ')' . body

    '{'  shift, and go to state 230

    body  go to state 326


state 311

  104 sc_blocks: KW_CASE LIT_INT ':' . statements sc_blocks

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    statements       go to state 327
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    cart             go to state 45
    epsilon          go to state 46


state 312

  105 sc_blocks: KW_CASE LIT_FLOAT ':' . statements sc_blocks

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    statements       go to state 328
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    cart             go to state 45
    epsilon          go to state 46


state 313

  103 sc_blocks: KW_CASE LIT_CHAR ':' . statements sc_blocks

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    statements       go to state 329
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    cart             go to state 45
    epsilon          go to state 46


state 314

  101 switch_case: KW_SWITCH '(' expression ')' '{' sc_blocks KW_DEFAULT ':' . statements '}'

    KW_CLAIM         shift, and go to state 1
    KW_PRINT         shift, and go to state 2
    KW_LET           shift, and go to state 3
    KW_RETURN        shift, and go to state 4
    KW_IF            shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_FOR           shift, and go to state 7
    KW_SWITCH        shift, and go to state 8
    KW_BREAK         shift, and go to state 9
    KW_CONTINUE      shift, and go to state 10
    KW_CYCLIC        shift, and go to state 11
    KW_BIG_RATIONAL  shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_SYMMETRIC     shift, and go to state 14
    KW_ALTERNATING   shift, and go to state 15
    KW_DIHEDRAL      shift, and go to state 16
    KW_INV_MAT       shift, and go to state 17
    KW_BIGINT        shift, and go to state 18
    KW_MATRIX        shift, and go to state 19
    KW_POLYNOMIAL    shift, and go to state 20
    KW_VEC           shift, and go to state 21
    KW_BUF           shift, and go to state 22
    IDENT            shift, and go to state 23
    PRIMITIVE_DTYPE  shift, and go to state 24
    '('              shift, and go to state 25
    '&'              shift, and go to state 26

    $default  reduce using rule 132 (epsilon)

    statements       go to state 330
    statement        go to state 29
    var              go to state 30
    field_data_type  go to state 31
    group_data_type  go to state 32
    ring_data_type   go to state 33
    space_data_type  go to state 34
    declaration      go to state 35
    type             go to state 36
    assignment       go to state 37
    return_stmt      go to state 38
    call_stmt        go to state 39
    array_access     go to state 40
    conditional      go to state 41
    loop_stmt        go to state 42
    switch_case      go to state 43
    archetype_claim  go to state 44
    cart             go to state 45
    epsilon          go to state 46


state 315

  117 function_header: KW_FN IDENT '(' parameter_list ')' ':' type .

    $default  reduce using rule 117 (function_header)


state 316

  128 forge: KW_FORGE type '(' parameter_list ')' '{' statements . '}'

    '}'  shift, and go to state 331


state 317

  111 additive_rule: '(' IDENT '=' IDENT . '+' IDENT ')' ARROW body

    '+'  shift, and go to state 332


state 318

  113 identity_rule: '(' IDENT '=' . LIT_INT ')' ARROW body

    LIT_INT  shift, and go to state 333


state 319

  114 negation_rule: '(' IDENT . '=' '-' IDENT ')' ARROW body

    '='  shift, and go to state 334


state 320

  107 archetype_claim: KW_CLAIM IDENT KW_IS KW_GROUP '{' additive_rule identity_rule negation_rule '}' . ';'

    ';'  shift, and go to state 335


state 321

  112 mult_rule: '(' IDENT '=' IDENT . '*' IDENT ')' ARROW body

    '*'  shift, and go to state 336


state 322

  108 archetype_claim: KW_CLAIM IDENT KW_IS KW_RING '{' mult_rule identity_rule '}' ';' .

    $default  reduce using rule 108 (archetype_claim)


state 323

  115 inverse_rule: '(' IDENT '=' '~' . IDENT ')' ARROW body

    IDENT  shift, and go to state 337


state 324

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT . ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    ')'  shift, and go to state 338


state 325

   97 loop_stmt: KW_FOR '(' declaration ';' expression ';' loop_mut ')' body .

    $default  reduce using rule 97 (loop_stmt)


state 326

   96 loop_stmt: KW_FOR '(' assignment ';' expression ';' loop_mut ')' body .

    $default  reduce using rule 96 (loop_stmt)


state 327

  104 sc_blocks: KW_CASE LIT_INT ':' statements . sc_blocks

    KW_CASE  shift, and go to state 262

    $default  reduce using rule 132 (epsilon)

    sc_blocks  go to state 339
    epsilon    go to state 264


state 328

  105 sc_blocks: KW_CASE LIT_FLOAT ':' statements . sc_blocks

    KW_CASE  shift, and go to state 262

    $default  reduce using rule 132 (epsilon)

    sc_blocks  go to state 340
    epsilon    go to state 264


state 329

  103 sc_blocks: KW_CASE LIT_CHAR ':' statements . sc_blocks

    KW_CASE  shift, and go to state 262

    $default  reduce using rule 132 (epsilon)

    sc_blocks  go to state 341
    epsilon    go to state 264


state 330

  101 switch_case: KW_SWITCH '(' expression ')' '{' sc_blocks KW_DEFAULT ':' statements . '}'

    '}'  shift, and go to state 342


state 331

  128 forge: KW_FORGE type '(' parameter_list ')' '{' statements '}' .

    $default  reduce using rule 128 (forge)


state 332

  111 additive_rule: '(' IDENT '=' IDENT '+' . IDENT ')' ARROW body

    IDENT  shift, and go to state 343


state 333

  113 identity_rule: '(' IDENT '=' LIT_INT . ')' ARROW body

    ')'  shift, and go to state 344


state 334

  114 negation_rule: '(' IDENT '=' . '-' IDENT ')' ARROW body

    '-'  shift, and go to state 345


state 335

  107 archetype_claim: KW_CLAIM IDENT KW_IS KW_GROUP '{' additive_rule identity_rule negation_rule '}' ';' .

    $default  reduce using rule 107 (archetype_claim)


state 336

  112 mult_rule: '(' IDENT '=' IDENT '*' . IDENT ')' ARROW body

    IDENT  shift, and go to state 346


state 337

  115 inverse_rule: '(' IDENT '=' '~' IDENT . ')' ARROW body

    ')'  shift, and go to state 347


state 338

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' . ';' additive_rule negation_rule identity_rule mult_rule '}' ';'

    ';'  shift, and go to state 348


state 339

  104 sc_blocks: KW_CASE LIT_INT ':' statements sc_blocks .

    $default  reduce using rule 104 (sc_blocks)


state 340

  105 sc_blocks: KW_CASE LIT_FLOAT ':' statements sc_blocks .

    $default  reduce using rule 105 (sc_blocks)


state 341

  103 sc_blocks: KW_CASE LIT_CHAR ':' statements sc_blocks .

    $default  reduce using rule 103 (sc_blocks)


state 342

  101 switch_case: KW_SWITCH '(' expression ')' '{' sc_blocks KW_DEFAULT ':' statements '}' .

    $default  reduce using rule 101 (switch_case)


state 343

  111 additive_rule: '(' IDENT '=' IDENT '+' IDENT . ')' ARROW body

    ')'  shift, and go to state 349


state 344

  113 identity_rule: '(' IDENT '=' LIT_INT ')' . ARROW body

    ARROW  shift, and go to state 350


state 345

  114 negation_rule: '(' IDENT '=' '-' . IDENT ')' ARROW body

    IDENT  shift, and go to state 351


state 346

  112 mult_rule: '(' IDENT '=' IDENT '*' IDENT . ')' ARROW body

    ')'  shift, and go to state 352


state 347

  115 inverse_rule: '(' IDENT '=' '~' IDENT ')' . ARROW body

    ARROW  shift, and go to state 353


state 348

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' . additive_rule negation_rule identity_rule mult_rule '}' ';'

    '('  shift, and go to state 250

    additive_rule  go to state 354


state 349

  111 additive_rule: '(' IDENT '=' IDENT '+' IDENT ')' . ARROW body

    ARROW  shift, and go to state 355


state 350

  113 identity_rule: '(' IDENT '=' LIT_INT ')' ARROW . body

    '{'  shift, and go to state 230

    body  go to state 356


state 351

  114 negation_rule: '(' IDENT '=' '-' IDENT . ')' ARROW body

    ')'  shift, and go to state 357


state 352

  112 mult_rule: '(' IDENT '=' IDENT '*' IDENT ')' . ARROW body

    ARROW  shift, and go to state 358


state 353

  115 inverse_rule: '(' IDENT '=' '~' IDENT ')' ARROW . body

    '{'  shift, and go to state 230

    body  go to state 359


state 354

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule . negation_rule identity_rule mult_rule '}' ';'

    '('  shift, and go to state 302

    negation_rule  go to state 360


state 355

  111 additive_rule: '(' IDENT '=' IDENT '+' IDENT ')' ARROW . body

    '{'  shift, and go to state 230

    body  go to state 361


state 356

  113 identity_rule: '(' IDENT '=' LIT_INT ')' ARROW body .

    $default  reduce using rule 113 (identity_rule)


state 357

  114 negation_rule: '(' IDENT '=' '-' IDENT ')' . ARROW body

    ARROW  shift, and go to state 362


state 358

  112 mult_rule: '(' IDENT '=' IDENT '*' IDENT ')' ARROW . body

    '{'  shift, and go to state 230

    body  go to state 363


state 359

  115 inverse_rule: '(' IDENT '=' '~' IDENT ')' ARROW body .

    $default  reduce using rule 115 (inverse_rule)


state 360

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule . identity_rule mult_rule '}' ';'

    '('  shift, and go to state 275

    identity_rule  go to state 364


state 361

  111 additive_rule: '(' IDENT '=' IDENT '+' IDENT ')' ARROW body .

    $default  reduce using rule 111 (additive_rule)


state 362

  114 negation_rule: '(' IDENT '=' '-' IDENT ')' ARROW . body

    '{'  shift, and go to state 230

    body  go to state 365


state 363

  112 mult_rule: '(' IDENT '=' IDENT '*' IDENT ')' ARROW body .

    $default  reduce using rule 112 (mult_rule)


state 364

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule . mult_rule '}' ';'

    '('  shift, and go to state 252

    mult_rule  go to state 366


state 365

  114 negation_rule: '(' IDENT '=' '-' IDENT ')' ARROW body .

    $default  reduce using rule 114 (negation_rule)


state 366

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule . '}' ';'

    '}'  shift, and go to state 367


state 367

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' . ';'

    ';'  shift, and go to state 368


state 368

  110 archetype_claim: KW_CLAIM IDENT KW_IS KW_SPACE '{' KW_FIELD '=' '(' IDENT ')' ';' additive_rule negation_rule identity_rule mult_rule '}' ';' .

    $default  reduce using rule 110 (archetype_claim)
